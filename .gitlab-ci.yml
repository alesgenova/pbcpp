image: gcc:latest

stages:
  - build
  - test


build-debug:
  stage: build
  before_script: 
    - apt update && apt -y install cmake libeigen3-dev
  script:
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug
    - make #VERBOSE=1
  # looks like there is a problem using cache when the two stages
  # run on different shared runners.
  # let's use a short-live artifact as a workaround.
  artifacts:
    paths:
      - build/
    expire_in: 30 minutes
  # cache:
  #   key: build-debug-cache
  #   paths:
  #     - build/
  #   policy: push


build-release:
  stage: build
  before_script: 
    - apt update && apt -y install cmake libeigen3-dev
  script:
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release
    - make pbcpp #VERBOSE=1
  artifacts:
   paths:
     - build/src/pbcpp/libpbcpp.so


# run tests using the binary built before
test:
  stage: test
  dependencies: 
    - build-debug
  # cache:
  #   key: build-debug-cache
  #   paths:
  #     - build/
  #   policy: pull
  before_script: 
    - apt update && apt -y install lcov libeigen3-dev
  script:
    - cd build
    - tests/unittests
    - lcov --capture --directory src/pbcpp/CMakeFiles/pbcpp.dir/ --output-file coverage_all.info
    - lcov --extract coverage_all.info "*/src/pbcpp/*" --output-file coverage_pbcpp.info
    #- genhtml coverage_pbcpp.info --output-directory out
  coverage: '/lines......:\s*(\d+.\d+\%)/'
